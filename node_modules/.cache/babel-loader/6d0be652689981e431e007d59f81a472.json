{"ast":null,"code":"var _jsxFileName = \"/Users/Lenovo/Blockchain development/Metamask_wallet/src/WalletCard.js\",\n  _s = $RefreshSig$();\n// https://docs.metamask.io/guide/ethereum-provider.html#using-the-provider\n\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './WalletCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletCard = () => {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      console.log('MetaMask Here!');\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n        getAccountBalance(result[0]);\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    getAccountBalance(newAccount.toString());\n  };\n  const getAccountBalance = account => {\n    window.ethereum.request({\n      method: 'eth_getBalance',\n      params: [account, 'latest']\n    }).then(balance => {\n      setUserBalance(ethers.utils.formatEther(balance));\n    }).catch(error => {\n      setErrorMessage(error.message);\n    });\n  };\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  };\n\n  // listen for account changes\n  window.ethereum.on('accountsChanged', accountChangedHandler);\n  window.ethereum.on('chainChanged', chainChangedHandler);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"walletCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" \", \"Connect Metamask\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accountDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Address: \", defaultAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balanceDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Balance: \", userBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n_s(WalletCard, \"958uiNd4ZvD4oxPz84YlssYAopU=\");\n_c = WalletCard;\nexport default WalletCard;\nvar _c;\n$RefreshReg$(_c, \"WalletCard\");","map":{"version":3,"names":["React","useState","ethers","WalletCard","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","connButtonText","setConnButtonText","connectWalletHandler","window","ethereum","isMetaMask","console","log","request","method","then","result","accountChangedHandler","getAccountBalance","catch","error","message","newAccount","toString","account","params","balance","utils","formatEther","chainChangedHandler","location","reload","on"],"sources":["/Users/Lenovo/Blockchain development/Metamask_wallet/src/WalletCard.js"],"sourcesContent":["// https://docs.metamask.io/guide/ethereum-provider.html#using-the-provider\n\nimport React, {useState} from 'react'\nimport {ethers} from 'ethers'\nimport './WalletCard.css'\n\nconst WalletCard = () => {\n\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\n\tconst [userBalance, setUserBalance] = useState(null);\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n\tconst connectWalletHandler = () => {\n\t\tif (window.ethereum && window.ethereum.isMetaMask) {\n\t\t\tconsole.log('MetaMask Here!');\n\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\n\t\t\t.then(result => {\n\t\t\t\taccountChangedHandler(result[0]);\n\t\t\t\tsetConnButtonText('Wallet Connected');\n\t\t\t\tgetAccountBalance(result[0]);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\n\t\t\t});\n\n\t\t} else {\n\t\t\tconsole.log('Need to install MetaMask');\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\n\t\t}\n\t}\n\n\t// update account, will cause component re-render\n\tconst accountChangedHandler = (newAccount) => {\n\t\tsetDefaultAccount(newAccount);\n\t\tgetAccountBalance(newAccount.toString());\n\t}\n\n\tconst getAccountBalance = (account) => {\n\t\twindow.ethereum.request({method: 'eth_getBalance', params: [account, 'latest']})\n\t\t.then(balance => {\n\t\t\tsetUserBalance(ethers.utils.formatEther(balance));\n\t\t})\n\t\t.catch(error => {\n\t\t\tsetErrorMessage(error.message);\n\t\t});\n\t};\n\n\tconst chainChangedHandler = () => {\n\t\t// reload the page to avoid any errors with chain change mid use of application\n\t\twindow.location.reload();\n\t}\n\n\n\t// listen for account changes\n\twindow.ethereum.on('accountsChanged', accountChangedHandler);\n\n\twindow.ethereum.on('chainChanged', chainChangedHandler);\n\t\n\treturn (\n\t\t<div className='walletCard'>\n\t\t<h4> {\"Connect Metamask\"} </h4>\n\t\t\t<button onClick={connectWalletHandler}>{connButtonText}</button>\n\t\t\t<div className='accountDisplay'>\n\t\t\t\t<h3>Address: {defaultAccount}</h3>\n\t\t\t</div>\n\t\t\t<div className='balanceDisplay'>\n\t\t\t\t<h3>Balance: {userBalance}</h3>\n\t\t\t</div>\n\t\t\t{errorMessage}\n\t\t</div>\n\t);\n}\n\nexport default WalletCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}